// App.js
import { useState } from 'react';
import { Box, CssBaseline, ThemeProvider, createTheme } from '@mui/material';
import Header from './components/Header';
import Sidebar from './components/Sidebar';
import MainContent from './components/MainContent';

const theme = createTheme({
  palette: {
    background: {
      default: '#f9f9f9'
    }
  },
  components: {
    MuiAppBar: {
      styleOverrides: {
        root: {
          backgroundColor: 'white',
          color: 'black',
          boxShadow: '0 1px 3px rgba(0,0,0,0.1)'
        }
      }
    }
  }
});

function App() {
  const [isSidebarOpen, setIsSidebarOpen] = useState(true);
  const [activeCategory, setActiveCategory] = useState('All');

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>
        <Header toggleSidebar={toggleSidebar} />
        <Box sx={{ display: 'flex', flexGrow: 1, overflow: 'hidden' }}>
          <Sidebar open={isSidebarOpen} />
          <MainContent 
            activeCategory={activeCategory} 
            setActiveCategory={setActiveCategory} 
          />
        </Box>
      </Box>
    </ThemeProvider>
  );
}

export default App;

// components/Header.js
import {
  AppBar,
  Box,
  IconButton,
  InputBase,
  Toolbar,
  Avatar,
  Button
} from '@mui/material';
import { styled, alpha } from '@mui/material/styles';
import MenuIcon from '@mui/icons-material/Menu';
import SearchIcon from '@mui/icons-material/Search';
import MicIcon from '@mui/icons-material/Mic';
import VideoCallIcon from '@mui/icons-material/VideoCall';
import NotificationsIcon from '@mui/icons-material/Notifications';

const Search = styled('div')(({ theme }) => ({
  position: 'relative',
  borderRadius: '40px',
  backgroundColor: alpha(theme.palette.common.black, 0.05),
  '&:hover': {
    backgroundColor: alpha(theme.palette.common.black, 0.1),
  },
  marginRight: theme.spacing(2),
  marginLeft: 0,
  width: '100%',
  display: 'flex',
  [theme.breakpoints.up('sm')]: {
    marginLeft: theme.spacing(3),
    width: 'auto',
    flexGrow: 1,
    maxWidth: '600px'
  },
}));

const SearchIconWrapper = styled('div')(({ theme }) => ({
  padding: theme.spacing(0, 2),
  height: '100%',
  position: 'absolute',
  pointerEvents: 'none',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
}));

const StyledInputBase = styled(InputBase)(({ theme }) => ({
  color: 'inherit',
  width: '100%',
  '& .MuiInputBase-input': {
    padding: theme.spacing(1.5, 1, 1.5, 0),
    paddingLeft: `calc(1em + ${theme.spacing(4)})`,
    transition: theme.transitions.create('width'),
    width: '100%',
  },
}));

const YouTubeLogo = styled('div')(({ theme }) => ({
  display: 'flex',
  alignItems: 'center',
  gap: theme.spacing(1),
  marginRight: theme.spacing(2),
  '& .icon': {
    backgroundColor: '#FF0000',
    width: 30,
    height: 20,
    borderRadius: 4,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
  },
  '& .text': {
    fontWeight: 'bold',
    fontSize: '1.2rem',
  },
}));

function Header({ toggleSidebar }) {
  return (
    <AppBar position="sticky" elevation={0}>
      <Toolbar>
        <IconButton
          size="large"
          edge="start"
          color="inherit"
          aria-label="open drawer"
          onClick={toggleSidebar}
          sx={{ mr: 2 }}
        >
          <MenuIcon />
        </IconButton>
        <YouTubeLogo>
          <Box className="icon">
            <Box component="span" sx={{ color: 'white', fontSize: '0.7rem' }}>▶</Box>
          </Box>
          <Box component="span" className="text">YouTube</Box>
        </YouTubeLogo>

        <Search>
          <StyledInputBase
            placeholder="Search…"
            inputProps={{ 'aria-label': 'search' }}
          />
          <Button 
            variant="contained" 
            disableElevation
            sx={{ 
              borderRadius: '0 40px 40px 0',
              backgroundColor: '#f0f0f0',
              color: '#606060',
              minWidth: 64,
              '&:hover': {
                backgroundColor: '#e0e0e0'
              }
            }}
          >
            <SearchIcon />
          </Button>
        </Search>
        
        <IconButton sx={{ ml: 1, backgroundColor: '#f0f0f0' }}>
          <MicIcon />
        </IconButton>
        
        <Box sx={{ flexGrow: 1 }} />
        
        <IconButton size="large" color="inherit">
          <VideoCallIcon />
        </IconButton>
        <IconButton size="large" color="inherit">
          <NotificationsIcon />
        </IconButton>
        <Avatar
          sx={{ width: 32, height: 32, bgcolor: '#3ea6ff', ml: 2 }}
        >
          U
        </Avatar>
      </Toolbar>
    </AppBar>
  );
}

export default Header;

// components/Sidebar.js
import {
  Box,
  Drawer,
  List,
  ListItem,
  ListItemButton,
  ListItemIcon,
  ListItemText,
  Typography,
  Divider,
  Avatar
} from '@mui/material';
import HomeIcon from '@mui/icons-material/Home';
import ExploreIcon from '@mui/icons-material/Explore';
import SubscriptionsIcon from '@mui/icons-material/Subscriptions';
import VideoLibraryIcon from '@mui/icons-material/VideoLibrary';
import HistoryIcon from '@mui/icons-material/History';
import OndemandVideoIcon from '@mui/icons-material/OndemandVideo';
import WatchLaterIcon from '@mui/icons-material/WatchLater';
import ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';

const drawerWidth = 240;

function Sidebar({ open }) {
  const mainNavItems = [
    { text: 'Home', icon: <HomeIcon /> },
    { text: 'Explore', icon: <ExploreIcon /> },
    { text: 'Subscriptions', icon: <SubscriptionsIcon /> }
  ];

  const libraryItems = [
    { text: 'Library', icon: <VideoLibraryIcon /> },
    { text: 'History', icon: <HistoryIcon /> },
    { text: 'Your videos', icon: <OndemandVideoIcon /> },
    { text: 'Watch later', icon: <WatchLaterIcon /> },
    { text: 'Liked videos', icon: <ThumbUpAltIcon /> }
  ];

  const subscriptionChannels = [
    'Design Course',
    'Fireship',
    'Traversy Media',
    'Web Dev Simplified',
    'Kevin Powell'
  ];

  return (
    <Drawer
      variant="persistent"
      open={open}
      sx={{
        width: drawerWidth,
        flexShrink: 0,
        '& .MuiDrawer-paper': {
          width: drawerWidth,
          boxSizing: 'border-box',
          position: 'relative',
          border: 'none'
        },
      }}
    >
      <List>
        {mainNavItems.map((item) => (
          <ListItem key={item.text} disablePadding>
            <ListItemButton selected={item.text === 'Home'}>
              <ListItemIcon>{item.icon}</ListItemIcon>
              <ListItemText primary={item.text} />
            </ListItemButton>
          </ListItem>
        ))}
      </List>
      <Divider />
      <List>
        {libraryItems.map((item) => (
          <ListItem key={item.text} disablePadding>
            <ListItemButton>
              <ListItemIcon>{item.icon}</ListItemIcon>
              <ListItemText primary={item.text} />
            </ListItemButton>
          </ListItem>
        ))}
      </List>
      <Divider />
      <Box sx={{ p: 2, pt: 2 }}>
        <Typography variant="subtitle2" color="text.secondary" sx={{ fontWeight: 'bold', mb: 1 }}>
          SUBSCRIPTIONS
        </Typography>
        <List disablePadding>
          {subscriptionChannels.map((channel) => (
            <ListItem key={channel} disablePadding sx={{ mb: 1 }}>
              <ListItemButton>
                <ListItemIcon>
                  <Avatar sx={{ width: 24, height: 24, bgcolor: 'gray' }} />
                </ListItemIcon>
                <ListItemText primary={channel} />
              </ListItemButton>
            </ListItem>
          ))}
        </List>
      </Box>
    </Drawer>
  );
}

export default Sidebar;

// components/MainContent.js
import { Box } from '@mui/material';
import CategoryBar from './CategoryBar';
import VideoGrid from './VideoGrid';

function MainContent({ activeCategory, setActiveCategory }) {
  return (
    <Box
      component="main"
      sx={{
        flexGrow: 1,
        p: 2,
        overflow: 'auto',
        backgroundColor: '#f9f9f9'
      }}
    >
      <CategoryBar 
        activeCategory={activeCategory} 
        setActiveCategory={setActiveCategory} 
      />
      <VideoGrid />
    </Box>
  );
}

export default MainContent;

// components/CategoryBar.js
import { useState } from 'react';
import { Box, Chip, IconButton } from '@mui/material';
import { styled } from '@mui/material/styles';
import ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';
import ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';

const CategoryContainer = styled(Box)(({ theme }) => ({
  display: 'flex',
  alignItems: 'center',
  position: 'relative',
  marginBottom: theme.spacing(2),
  '&::after': {
    content: '""',
    position: 'absolute',
    right: 0,
    top: 0,
    height: '100%',
    width: 50,
    background: 'linear-gradient(to right, transparent, #f9f9f9)',
    pointerEvents: 'none'
  }
}));

const ScrollContainer = styled(Box)({
  display: 'flex',
  gap: 8,
  overflowX: 'auto',
  scrollbarWidth: 'none', // Firefox
  '&::-webkit-scrollbar': {
    display: 'none' // Chrome, Safari, Edge
  },
  paddingBottom: 8,
  flex: 1
});

function CategoryBar({ activeCategory, setActiveCategory }) {
  const categories = [
    'All', 'Music', 'Gaming', 'News', 'Live', 'Comedy',
    'Sports', 'Education', 'Fashion', 'Science', 'Technology', 'Food', 'Travel'
  ];

  const scrollRef = useState(null);
  
  const handleScroll = (direction) => {
    if (scrollRef.current) {
      scrollRef.current.scrollLeft += direction * 200;
    }
  };

  return (
    <CategoryContainer>
      <IconButton 
        size="small" 
        sx={{ 
          position: 'absolute', 
          left: 0, 
          zIndex: 2, 
          bgcolor: 'white',
          boxShadow: 1,
          '&:hover': { bgcolor: 'white' }
        }}
        onClick={() => handleScroll(-1)}
      >
        <ArrowBackIosNewIcon fontSize="small" />
      </IconButton>
      
      <ScrollContainer ref={scrollRef}>
        {categories.map((category) => (
          <Chip
            key={category}
            label={category}
            onClick={() => setActiveCategory(category)}
            sx={{
              bgcolor: activeCategory === category ? 'black' : '#f0f0f0',
              color: activeCategory === category ? 'white' : 'inherit',
              '&:hover': {
                bgcolor: activeCategory === category ? 'black' : '#e0e0e0',
              },
              fontWeight: activeCategory === category ? 500 : 400,
            }}
          />
        ))}
      </ScrollContainer>
      
      <IconButton 
        size="small" 
        sx={{ 
          position: 'absolute', 
          right: 0, 
          zIndex: 2,
          bgcolor: 'white',
          boxShadow: 1,
          '&:hover': { bgcolor: 'white' }
        }}
        onClick={() => handleScroll(1)}
      >
        <ArrowForwardIosIcon fontSize="small" />
      </IconButton>
    </CategoryContainer>
  );
}

export default CategoryBar;

// components/VideoGrid.js
import { Grid } from '@mui/material';
import VideoCard from './VideoCard';

function VideoGrid() {
  const videoData = [
    {
      id: 1,
      title: 'How to Build a React App in 10 Minutes',
      channel: 'Dev Channel',
      views: '450K',
      time: '3 days ago',
      duration: '10:30'
    },
    {
      id: 2,
      title: 'Material UI Complete Tutorial - Build Amazing UIs Fast',
      channel: 'Code Masters',
      views: '720K',
      time: '1 week ago',
      duration: '23:15'
    },
    {
      id: 3,
      title: 'JavaScript Tips and Tricks You Need to Know',
      channel: 'Web Dev Simplified',
      views: '890K',
      time: '2 weeks ago',
      duration: '15:42'
    },
    {
      id: 4,
      title: 'Learn React in 2025 - Full Crash Course',
      channel: 'Programming with Mosh',
      views: '1.2M',
      time: '5 days ago',
      duration: '42:18'
    },
    {
      id: 5,
      title: 'React vs Angular vs Vue - Which One Should You Learn?',
      channel: 'Fireship',
      views: '2.1M',
      time: '3 months ago',
      duration: '11:45'
    },
    {
      id: 6,
      title: 'Building a YouTube Clone with React and Material UI',
      channel: 'Traversy Media',
      views: '340K',
      time: '4 days ago',
      duration: '28:22'
    },
    {
      id: 7,
      title: '10 CSS Tricks You Didn\'t Know',
      channel: 'Kevin Powell',
      views: '520K',
      time: '2 weeks ago',
      duration: '18:03'
    },
    {
      id: 8,
      title: 'Build and Deploy a Modern Full Stack App',
      channel: 'JavaScript Mastery',
      views: '180K',
      time: '1 day ago',
      duration: '1:13:45'
    },
    {
      id: 9,
      title: 'Why You Should Learn TypeScript Today',
      channel: 'Code Evolution',
      views: '290K',
      time: '6 days ago',
      duration: '14:28'
    },
    {
      id: 10,
      title: 'Next.js for Beginners - Full Tutorial',
      channel: 'Dev Ed',
      views: '320K',
      time: '5 days ago',
      duration: '35:19'
    },
    {
      id: 11,
      title: 'The Ultimate Redux Toolkit Tutorial',
      channel: 'Pedro Tech',
      views: '150K',
      time: '2 days ago',
      duration: '20:57'
    },
    {
      id: 12,
      title: 'How to Get a Developer Job in 2025',
      channel: 'Coding Addict',
      views: '430K',
      time: '1 week ago',
      duration: '25:33'
    }
  ];

  return (
    <Grid container spacing={3}>
      {videoData.map((video) => (
        <Grid item xs={12} sm={6} md={4} lg={3} key={video.id}>
          <VideoCard video={video} />
        </Grid>
      ))}
    </Grid>
  );
}

export default VideoGrid;

// components/VideoCard.js
import {
  Card,
  CardMedia,
  CardContent,
  Typography,
  Box,
  Avatar
} from '@mui/material';
import { styled } from '@mui/material/styles';

const VideoCardWrapper = styled(Card)({
  boxShadow: 'none',
  backgroundColor: 'transparent',
  cursor: 'pointer',
  transition: 'transform 0.2s',
  '&:hover': {
    transform: 'scale(1.02)'
  }
});

const ThumbnailContainer = styled(Box)({
  position: 'relative',
  borderRadius: 8,
  overflow: 'hidden'
});

const Duration = styled(Box)({
  position: 'absolute',
  bottom: 8,
  right: 8,
  backgroundColor: 'rgba(0, 0, 0, 0.8)',
  color: 'white',
  padding: '2px 4px',
  borderRadius: 4,
  fontSize: '0.7rem',
  fontWeight: 500
});

function VideoCard({ video }) {
  return (
    <VideoCardWrapper>
      <ThumbnailContainer>
        <CardMedia
          component="img"
          image={`/api/placeholder/400/225?text=${encodeURIComponent(video.channel)}`}
          alt={video.title}
          sx={{ 
            height: 0,
            paddingTop: '56.25%', // 16:9 aspect ratio
            backgroundColor: '#e3e3e3'
          }}
        />
        <Duration>{video.duration}</Duration>
      </ThumbnailContainer>
      <Box sx={{ display: 'flex', mt: 2 }}>
        <Avatar sx={{ width: 36, height: 36, mr: 2, bgcolor: 'grey.400' }}/>
        <CardContent sx={{ p: 0, '&:last-child': { pb: 0 } }}>
          <Typography 
            variant="subtitle1" 
            component="div" 
            sx={{ 
              fontWeight: 500, 
              fontSize: '0.95rem',
              overflow: 'hidden',
              textOverflow: 'ellipsis',
              display: '-webkit-box',
              WebkitLineClamp: 2, 
              WebkitBoxOrient: 'vertical',
              lineHeight: 1.2,
              mb: 0.5
            }}
          >
            {video.title}
          </Typography>
          <Typography variant="body2" color="text.secondary">
            {video.channel}
          </Typography>
          <Typography variant="body2" color="text.secondary">
            {video.views} views · {video.time}
          </Typography>
        </CardContent>
      </Box>
    </VideoCardWrapper>
  );
}

export default VideoCard;

// index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
